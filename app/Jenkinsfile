pipeline {
    agent any
  
    stages {
        stage('Checkout') {
            steps {
                sh 'pwd'
                sh 'echo passed!!!!'
                git 'https://github.com/Duocpv0101/nginx-argocd.git' 
                sh 'pwd'
                sh 'ls'
            }
        }
        // stage('Build and Push Docker Image') {
        //     environment {
        //         DOCKER_IMAGE = "duocpv1101/devopslab:${BUILD_NUMBER}"
        //         DOCKERFILE_LOCATION = "argocd-guide/app/Dockerfile"
        //         REGISTRY_CREDENTIALS = credentials('docker-hub')
        //     }
        //     steps {
        //         script {
        //             sh 'cd ${DOCKERFILE_LOCATION} && docker build -t ${DOCKER_IMAGE} .'
        //             def dockerImage = docker.image("${DOCKER_IMAGE}")
        //             docker.withRegistry('https://registry.hub.docker.com', "${REGISTRY_CREDENTIALS}") {
        //                 dockerImage.push()
        //             }
        //         }
        //     }
        // }
        // stage('Update Deployment File') {
        //     environment {
        //         GIT_REPO_NAME = "ultimate-cicd" ## replace with your github repository name
        //         GIT_USER_NAME = "kiranbakale"   ## replace with your github account username
        //     }
        //     steps {
        //         withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
        //             sh '''
        //                 git config user.email "kiranbakale9@gmail.com" ## replace with your github useremail
        //                 git config user.name "kiranbakale"            ## replace with your github usernamename
        //                 OLD_BUILD_NUMBER=$((${BUILD_NUMBER}-1))
        //                 sed -i "s/${OLD_BUILD_NUMBER}/${BUILD_NUMBER}/g" java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        //                 git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
        //                 git commit -m "Update deployment image to version ${BUILD_NUMBER}"
        //                 git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
        //             '''
        //         }
        //     }
        // }
    }
}